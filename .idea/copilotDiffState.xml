<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/offlinepplworkoutapp/data/dao/WorkoutTemplateDao.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/offlinepplworkoutapp/data/dao/WorkoutTemplateDao.kt" />
              <option name="updatedContent" value="package com.example.offlinepplworkoutapp.data.dao&#10;&#10;import androidx.room.Dao&#10;import androidx.room.Insert&#10;import androidx.room.Query&#10;import androidx.room.Update&#10;import androidx.room.Delete&#10;import com.example.offlinepplworkoutapp.data.entity.WorkoutTemplate&#10;import kotlinx.coroutines.flow.Flow&#10;&#10;/**&#10; * Data Access Object for WorkoutTemplate operations&#10; */&#10;@Dao&#10;interface WorkoutTemplateDao {&#10;&#10;    @Query(&quot;SELECT * FROM workout_templates WHERE isActive = 1 ORDER BY category, name&quot;)&#10;    fun getAllActiveTemplates(): Flow&lt;List&lt;WorkoutTemplate&gt;&gt;&#10;&#10;    @Query(&quot;SELECT * FROM workout_templates WHERE category = :category AND isActive = 1 ORDER BY name&quot;)&#10;    fun getTemplatesByCategory(category: String): Flow&lt;List&lt;WorkoutTemplate&gt;&gt;&#10;&#10;    @Query(&quot;SELECT * FROM workout_templates WHERE id = :templateId&quot;)&#10;    suspend fun getTemplateById(templateId: Int): WorkoutTemplate?&#10;&#10;    @Query(&quot;SELECT * FROM workout_templates WHERE category = :category AND difficulty = :difficulty AND isActive = 1&quot;)&#10;    suspend fun getTemplatesByCategoryAndDifficulty(category: String, difficulty: String): List&lt;WorkoutTemplate&gt;&#10;&#10;    @Insert&#10;    suspend fun insertTemplate(template: WorkoutTemplate): Long&#10;&#10;    @Insert&#10;    suspend fun insertTemplates(templates: List&lt;WorkoutTemplate&gt;)&#10;&#10;    @Update&#10;    suspend fun updateTemplate(template: WorkoutTemplate)&#10;&#10;    @Delete&#10;    suspend fun deleteTemplate(template: WorkoutTemplate)&#10;&#10;    @Query(&quot;DELETE FROM workout_templates&quot;)&#10;    suspend fun deleteAll(): Int&#10;&#10;    @Query(&quot;SELECT COUNT(*) FROM workout_templates&quot;)&#10;    suspend fun getTemplateCount(): Int&#10;&#10;    @Query(&quot;UPDATE workout_templates SET lastUsedDate = :date WHERE id = :templateId&quot;)&#10;    suspend fun updateLastUsedDate(templateId: Int, date: String)&#10;&#10;    @Query(&quot;SELECT * FROM workout_templates WHERE isCustom = 1 AND isActive = 1 ORDER BY name&quot;)&#10;    fun getCustomTemplates(): Flow&lt;List&lt;WorkoutTemplate&gt;&gt;&#10;&#10;    @Query(&quot;SELECT * FROM workout_templates WHERE isCustom = 0 AND isActive = 1 ORDER BY category, name&quot;)&#10;    fun getPredefinedTemplates(): Flow&lt;List&lt;WorkoutTemplate&gt;&gt;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>